---
import '../styles/katex.css';
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="light">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<script>
			// Check theme settings in local storage
			if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
				document.documentElement.classList.add('dark')
			} else {
				document.documentElement.classList.remove('dark')
			}
		</script>
		<script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.js"></script>
		<script is:inline src="/env-config.js"></script>
	</head>
	<body class="min-h-screen bg-slate-50 dark:bg-slate-900">
		<div class="min-h-full">
			<header class="bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm shadow-lg border-b border-slate-200/50 dark:border-slate-700/50 sticky top-0 z-50">
				<nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
					<div class="flex justify-between h-16 items-center">
						<div class="flex-shrink-0">
							<a href="/" class="group flex items-center space-x-2">
								<div class="relative">
									<div class="absolute inset-0 rounded-full bg-gradient-to-r from-blue-600/50 to-indigo-600/50 blur-md opacity-0 group-hover:opacity-75 transition-all duration-300 scale-125"></div>
									<svg class="relative w-8 h-8 text-blue-600 dark:text-blue-400 transform group-hover:scale-110 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
									</svg>
								</div>
								<span class="text-xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 dark:from-blue-400 dark:to-indigo-400 bg-clip-text text-transparent">AI Assistant</span>
							</a>
						</div>
						
						<div class="flex items-center space-x-6">
							{import.meta.env.PUBLIC_SHOW_SETTINGS === 'true' && (
								<a href="/settings" class="relative group">
									<span class="absolute -inset-2 bg-slate-100 dark:bg-slate-700 rounded-lg opacity-0 group-hover:opacity-100 transition-all duration-200"></span>
									<span class="relative flex items-center space-x-1.5 text-slate-600 dark:text-slate-300 group-hover:text-slate-900 dark:group-hover:text-white transition-colors duration-200">
										<svg class="w-4 h-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4" />
										</svg>
										<span>Settings</span>
									</span>
								</a>
							)}

							<button
								id="theme-toggle"
								class="relative group p-2 rounded-lg text-slate-600 dark:text-slate-300"
								aria-label="Toggle theme"
							>
								<span class="absolute inset-0 bg-slate-100 dark:bg-slate-700 rounded-lg opacity-0 group-hover:opacity-100 transition-all duration-200"></span>
								<svg id="theme-toggle-dark-icon" class="relative hidden w-5 h-5 transition-transform duration-200 group-hover:rotate-12" fill="currentColor" viewBox="0 0 20 20">
									<path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
								</svg>
								<svg id="theme-toggle-light-icon" class="relative hidden w-5 h-5 transition-transform duration-200 group-hover:rotate-90" fill="currentColor" viewBox="0 0 20 20">
									<path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"></path>
								</svg>
							</button>
						</div>
					</div>
				</nav>
			</header>
			<main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
				<slot />
			</main>
		</div>
		<script>
			const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
			const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
			const themeToggleBtn = document.getElementById('theme-toggle');

			// Show corresponding icon based on current theme
			if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
				themeToggleLightIcon?.classList.remove('hidden');
			} else {
				themeToggleDarkIcon?.classList.remove('hidden');
			}

			themeToggleBtn?.addEventListener('click', () => {
				themeToggleDarkIcon?.classList.toggle('hidden');
				themeToggleLightIcon?.classList.toggle('hidden');

				if (localStorage.theme === 'dark') {
					document.documentElement.classList.remove('dark');
					localStorage.theme = 'light';
				} else {
					document.documentElement.classList.add('dark');
					localStorage.theme = 'dark';
				}
			});
		</script>
	</body>
</html>
